// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.11.4
// source: positioning.proto

package server

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetPositionResult int32

const (
	GetPositionResult_OK        GetPositionResult = 0
	GetPositionResult_NO_MATCH  GetPositionResult = 1
	GetPositionResult_NO_MAP    GetPositionResult = 2
	GetPositionResult_NO_FRAMES GetPositionResult = 3
)

// Enum value maps for GetPositionResult.
var (
	GetPositionResult_name = map[int32]string{
		0: "OK",
		1: "NO_MATCH",
		2: "NO_MAP",
		3: "NO_FRAMES",
	}
	GetPositionResult_value = map[string]int32{
		"OK":        0,
		"NO_MATCH":  1,
		"NO_MAP":    2,
		"NO_FRAMES": 3,
	}
)

func (x GetPositionResult) Enum() *GetPositionResult {
	p := new(GetPositionResult)
	*p = x
	return p
}

func (x GetPositionResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPositionResult) Descriptor() protoreflect.EnumDescriptor {
	return file_positioning_proto_enumTypes[0].Descriptor()
}

func (GetPositionResult) Type() protoreflect.EnumType {
	return &file_positioning_proto_enumTypes[0]
}

func (x GetPositionResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPositionResult.Descriptor instead.
func (GetPositionResult) EnumDescriptor() ([]byte, []int) {
	return file_positioning_proto_rawDescGZIP(), []int{0}
}

type GetPositionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position     *Position         `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Result       GetPositionResult `protobuf:"varint,2,opt,name=result,proto3,enum=positioning.GetPositionResult" json:"result,omitempty"`
	BaSceneId    string            `protobuf:"bytes,3,opt,name=ba_scene_id,json=baSceneId,proto3" json:"ba_scene_id,omitempty"`
	BaSceneLabel string            `protobuf:"bytes,4,opt,name=ba_scene_label,json=baSceneLabel,proto3" json:"ba_scene_label,omitempty"`
	SessionId    string            `protobuf:"bytes,5,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GetPositionReply) Reset() {
	*x = GetPositionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_positioning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionReply) ProtoMessage() {}

func (x *GetPositionReply) ProtoReflect() protoreflect.Message {
	mi := &file_positioning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionReply.ProtoReflect.Descriptor instead.
func (*GetPositionReply) Descriptor() ([]byte, []int) {
	return file_positioning_proto_rawDescGZIP(), []int{0}
}

func (x *GetPositionReply) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *GetPositionReply) GetResult() GetPositionResult {
	if x != nil {
		return x.Result
	}
	return GetPositionResult_OK
}

func (x *GetPositionReply) GetBaSceneId() string {
	if x != nil {
		return x.BaSceneId
	}
	return ""
}

func (x *GetPositionReply) GetBaSceneLabel() string {
	if x != nil {
		return x.BaSceneLabel
	}
	return ""
}

func (x *GetPositionReply) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame           *DataFrame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
	SessionId       string     `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId          uint64     `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IntrinsicMatrix *Matrix3X3 `protobuf:"bytes,4,opt,name=intrinsic_matrix,json=intrinsicMatrix,proto3" json:"intrinsic_matrix,omitempty"`
}

func (x *GetPositionRequest) Reset() {
	*x = GetPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_positioning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionRequest) ProtoMessage() {}

func (x *GetPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_positioning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionRequest.ProtoReflect.Descriptor instead.
func (*GetPositionRequest) Descriptor() ([]byte, []int) {
	return file_positioning_proto_rawDescGZIP(), []int{1}
}

func (x *GetPositionRequest) GetFrame() *DataFrame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *GetPositionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetPositionRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPositionRequest) GetIntrinsicMatrix() *Matrix3X3 {
	if x != nil {
		return x.IntrinsicMatrix
	}
	return nil
}

type GetBatchPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Batch []*GetPositionRequest `protobuf:"bytes,1,rep,name=batch,proto3" json:"batch,omitempty"`
}

func (x *GetBatchPositionRequest) Reset() {
	*x = GetBatchPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_positioning_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBatchPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchPositionRequest) ProtoMessage() {}

func (x *GetBatchPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_positioning_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchPositionRequest.ProtoReflect.Descriptor instead.
func (*GetBatchPositionRequest) Descriptor() ([]byte, []int) {
	return file_positioning_proto_rawDescGZIP(), []int{2}
}

func (x *GetBatchPositionRequest) GetBatch() []*GetPositionRequest {
	if x != nil {
		return x.Batch
	}
	return nil
}

type GetBatchPositionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Batch []*GetPositionReply `protobuf:"bytes,1,rep,name=batch,proto3" json:"batch,omitempty"`
}

func (x *GetBatchPositionReply) Reset() {
	*x = GetBatchPositionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_positioning_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBatchPositionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchPositionReply) ProtoMessage() {}

func (x *GetBatchPositionReply) ProtoReflect() protoreflect.Message {
	mi := &file_positioning_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchPositionReply.ProtoReflect.Descriptor instead.
func (*GetBatchPositionReply) Descriptor() ([]byte, []int) {
	return file_positioning_proto_rawDescGZIP(), []int{3}
}

func (x *GetBatchPositionReply) GetBatch() []*GetPositionReply {
	if x != nil {
		return x.Batch
	}
	return nil
}

var File_positioning_proto protoreflect.FileDescriptor

var file_positioning_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67,
	0x1a, 0x10, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x62, 0x61, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x61, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x40, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x5f,
	0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x33, 0x78, 0x33, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x4d, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x22, 0x50, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x22, 0x4c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x33, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x2a, 0x44, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x5f, 0x4d, 0x41, 0x50, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e,
	0x4f, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x10, 0x03, 0x32, 0x9a, 0x02, 0x0a, 0x12, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x5c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x57,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x28, 0x01, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_positioning_proto_rawDescOnce sync.Once
	file_positioning_proto_rawDescData = file_positioning_proto_rawDesc
)

func file_positioning_proto_rawDescGZIP() []byte {
	file_positioning_proto_rawDescOnce.Do(func() {
		file_positioning_proto_rawDescData = protoimpl.X.CompressGZIP(file_positioning_proto_rawDescData)
	})
	return file_positioning_proto_rawDescData
}

var file_positioning_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_positioning_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_positioning_proto_goTypes = []interface{}{
	(GetPositionResult)(0),          // 0: positioning.GetPositionResult
	(*GetPositionReply)(nil),        // 1: positioning.GetPositionReply
	(*GetPositionRequest)(nil),      // 2: positioning.GetPositionRequest
	(*GetBatchPositionRequest)(nil), // 3: positioning.GetBatchPositionRequest
	(*GetBatchPositionReply)(nil),   // 4: positioning.GetBatchPositionReply
	(*Position)(nil),                // 5: base_types.Position
	(*DataFrame)(nil),               // 6: base_types.DataFrame
	(*Matrix3X3)(nil),               // 7: base_types.Matrix3x3
}
var file_positioning_proto_depIdxs = []int32{
	5, // 0: positioning.GetPositionReply.position:type_name -> base_types.Position
	0, // 1: positioning.GetPositionReply.result:type_name -> positioning.GetPositionResult
	6, // 2: positioning.GetPositionRequest.frame:type_name -> base_types.DataFrame
	7, // 3: positioning.GetPositionRequest.intrinsic_matrix:type_name -> base_types.Matrix3x3
	2, // 4: positioning.GetBatchPositionRequest.batch:type_name -> positioning.GetPositionRequest
	1, // 5: positioning.GetBatchPositionReply.batch:type_name -> positioning.GetPositionReply
	2, // 6: positioning.PositioningService.GetPosition:input_type -> positioning.GetPositionRequest
	3, // 7: positioning.PositioningService.GetBatchPosition:input_type -> positioning.GetBatchPositionRequest
	2, // 8: positioning.PositioningService.GetStreamPosition:input_type -> positioning.GetPositionRequest
	1, // 9: positioning.PositioningService.GetPosition:output_type -> positioning.GetPositionReply
	4, // 10: positioning.PositioningService.GetBatchPosition:output_type -> positioning.GetBatchPositionReply
	1, // 11: positioning.PositioningService.GetStreamPosition:output_type -> positioning.GetPositionReply
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_positioning_proto_init() }
func file_positioning_proto_init() {
	if File_positioning_proto != nil {
		return
	}
	file_base_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_positioning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_positioning_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_positioning_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBatchPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_positioning_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBatchPositionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_positioning_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_positioning_proto_goTypes,
		DependencyIndexes: file_positioning_proto_depIdxs,
		EnumInfos:         file_positioning_proto_enumTypes,
		MessageInfos:      file_positioning_proto_msgTypes,
	}.Build()
	File_positioning_proto = out.File
	file_positioning_proto_rawDesc = nil
	file_positioning_proto_goTypes = nil
	file_positioning_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PositioningServiceClient is the client API for PositioningService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PositioningServiceClient interface {
	// если клиент подключился к проксе и слушает (открыл ListenPositions), то все что прилетает
	// в TelemetryService.InStream.DataFrame запрашивается сюда и результаты транслируются в ListenPositions
	GetPosition(ctx context.Context, in *GetPositionRequest, opts ...grpc.CallOption) (*GetPositionReply, error)
	GetBatchPosition(ctx context.Context, in *GetBatchPositionRequest, opts ...grpc.CallOption) (*GetBatchPositionReply, error)
	GetStreamPosition(ctx context.Context, opts ...grpc.CallOption) (PositioningService_GetStreamPositionClient, error)
}

type positioningServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPositioningServiceClient(cc grpc.ClientConnInterface) PositioningServiceClient {
	return &positioningServiceClient{cc}
}

func (c *positioningServiceClient) GetPosition(ctx context.Context, in *GetPositionRequest, opts ...grpc.CallOption) (*GetPositionReply, error) {
	out := new(GetPositionReply)
	err := c.cc.Invoke(ctx, "/positioning.PositioningService/GetPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positioningServiceClient) GetBatchPosition(ctx context.Context, in *GetBatchPositionRequest, opts ...grpc.CallOption) (*GetBatchPositionReply, error) {
	out := new(GetBatchPositionReply)
	err := c.cc.Invoke(ctx, "/positioning.PositioningService/GetBatchPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positioningServiceClient) GetStreamPosition(ctx context.Context, opts ...grpc.CallOption) (PositioningService_GetStreamPositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PositioningService_serviceDesc.Streams[0], "/positioning.PositioningService/GetStreamPosition", opts...)
	if err != nil {
		return nil, err
	}
	x := &positioningServiceGetStreamPositionClient{stream}
	return x, nil
}

type PositioningService_GetStreamPositionClient interface {
	Send(*GetPositionRequest) error
	Recv() (*GetPositionReply, error)
	grpc.ClientStream
}

type positioningServiceGetStreamPositionClient struct {
	grpc.ClientStream
}

func (x *positioningServiceGetStreamPositionClient) Send(m *GetPositionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *positioningServiceGetStreamPositionClient) Recv() (*GetPositionReply, error) {
	m := new(GetPositionReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PositioningServiceServer is the server API for PositioningService service.
type PositioningServiceServer interface {
	// если клиент подключился к проксе и слушает (открыл ListenPositions), то все что прилетает
	// в TelemetryService.InStream.DataFrame запрашивается сюда и результаты транслируются в ListenPositions
	GetPosition(context.Context, *GetPositionRequest) (*GetPositionReply, error)
	GetBatchPosition(context.Context, *GetBatchPositionRequest) (*GetBatchPositionReply, error)
	GetStreamPosition(PositioningService_GetStreamPositionServer) error
}

// UnimplementedPositioningServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPositioningServiceServer struct {
}

func (*UnimplementedPositioningServiceServer) GetPosition(context.Context, *GetPositionRequest) (*GetPositionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPosition not implemented")
}
func (*UnimplementedPositioningServiceServer) GetBatchPosition(context.Context, *GetBatchPositionRequest) (*GetBatchPositionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBatchPosition not implemented")
}
func (*UnimplementedPositioningServiceServer) GetStreamPosition(PositioningService_GetStreamPositionServer) error {
	return status.Errorf(codes.Unimplemented, "method GetStreamPosition not implemented")
}

func RegisterPositioningServiceServer(s *grpc.Server, srv PositioningServiceServer) {
	s.RegisterService(&_PositioningService_serviceDesc, srv)
}

func _PositioningService_GetPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositioningServiceServer).GetPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/positioning.PositioningService/GetPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositioningServiceServer).GetPosition(ctx, req.(*GetPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PositioningService_GetBatchPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBatchPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositioningServiceServer).GetBatchPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/positioning.PositioningService/GetBatchPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositioningServiceServer).GetBatchPosition(ctx, req.(*GetBatchPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PositioningService_GetStreamPosition_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PositioningServiceServer).GetStreamPosition(&positioningServiceGetStreamPositionServer{stream})
}

type PositioningService_GetStreamPositionServer interface {
	Send(*GetPositionReply) error
	Recv() (*GetPositionRequest, error)
	grpc.ServerStream
}

type positioningServiceGetStreamPositionServer struct {
	grpc.ServerStream
}

func (x *positioningServiceGetStreamPositionServer) Send(m *GetPositionReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *positioningServiceGetStreamPositionServer) Recv() (*GetPositionRequest, error) {
	m := new(GetPositionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PositioningService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "positioning.PositioningService",
	HandlerType: (*PositioningServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPosition",
			Handler:    _PositioningService_GetPosition_Handler,
		},
		{
			MethodName: "GetBatchPosition",
			Handler:    _PositioningService_GetBatchPosition_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetStreamPosition",
			Handler:       _PositioningService_GetStreamPosition_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "positioning.proto",
}
