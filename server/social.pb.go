// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.11.4
// source: social.proto

package server

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PostTypeEnum int32

const (
	PostTypeEnum_undefined_post_type PostTypeEnum = 0
	PostTypeEnum_original            PostTypeEnum = 1
	PostTypeEnum_repost              PostTypeEnum = 2
)

// Enum value maps for PostTypeEnum.
var (
	PostTypeEnum_name = map[int32]string{
		0: "undefined_post_type",
		1: "original",
		2: "repost",
	}
	PostTypeEnum_value = map[string]int32{
		"undefined_post_type": 0,
		"original":            1,
		"repost":              2,
	}
)

func (x PostTypeEnum) Enum() *PostTypeEnum {
	p := new(PostTypeEnum)
	*p = x
	return p
}

func (x PostTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_social_proto_enumTypes[0].Descriptor()
}

func (PostTypeEnum) Type() protoreflect.EnumType {
	return &file_social_proto_enumTypes[0]
}

func (x PostTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostTypeEnum.Descriptor instead.
func (PostTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{0}
}

type PostVisibility int32

const (
	PostVisibility_all           PostVisibility = 0
	PostVisibility_all_followers PostVisibility = 1
	PostVisibility_certain_chats PostVisibility = 2
)

// Enum value maps for PostVisibility.
var (
	PostVisibility_name = map[int32]string{
		0: "all",
		1: "all_followers",
		2: "certain_chats",
	}
	PostVisibility_value = map[string]int32{
		"all":           0,
		"all_followers": 1,
		"certain_chats": 2,
	}
)

func (x PostVisibility) Enum() *PostVisibility {
	p := new(PostVisibility)
	*p = x
	return p
}

func (x PostVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_social_proto_enumTypes[1].Descriptor()
}

func (PostVisibility) Type() protoreflect.EnumType {
	return &file_social_proto_enumTypes[1]
}

func (x PostVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostVisibility.Descriptor instead.
func (PostVisibility) EnumDescriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{1}
}

type ReportPostTypeEnum int32

const (
	ReportPostTypeEnum_inappropriate ReportPostTypeEnum = 0
	ReportPostTypeEnum_spam          ReportPostTypeEnum = 1
	ReportPostTypeEnum_other         ReportPostTypeEnum = 2
)

// Enum value maps for ReportPostTypeEnum.
var (
	ReportPostTypeEnum_name = map[int32]string{
		0: "inappropriate",
		1: "spam",
		2: "other",
	}
	ReportPostTypeEnum_value = map[string]int32{
		"inappropriate": 0,
		"spam":          1,
		"other":         2,
	}
)

func (x ReportPostTypeEnum) Enum() *ReportPostTypeEnum {
	p := new(ReportPostTypeEnum)
	*p = x
	return p
}

func (x ReportPostTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportPostTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_social_proto_enumTypes[2].Descriptor()
}

func (ReportPostTypeEnum) Type() protoreflect.EnumType {
	return &file_social_proto_enumTypes[2]
}

func (x ReportPostTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportPostTypeEnum.Descriptor instead.
func (ReportPostTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{2}
}

type ModeratePostTypeEnum int32

const (
	ModeratePostTypeEnum_not_seen ModeratePostTypeEnum = 0
	ModeratePostTypeEnum_approved ModeratePostTypeEnum = 1
	ModeratePostTypeEnum_rejected ModeratePostTypeEnum = 2
)

// Enum value maps for ModeratePostTypeEnum.
var (
	ModeratePostTypeEnum_name = map[int32]string{
		0: "not_seen",
		1: "approved",
		2: "rejected",
	}
	ModeratePostTypeEnum_value = map[string]int32{
		"not_seen": 0,
		"approved": 1,
		"rejected": 2,
	}
)

func (x ModeratePostTypeEnum) Enum() *ModeratePostTypeEnum {
	p := new(ModeratePostTypeEnum)
	*p = x
	return p
}

func (x ModeratePostTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModeratePostTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_social_proto_enumTypes[3].Descriptor()
}

func (ModeratePostTypeEnum) Type() protoreflect.EnumType {
	return &file_social_proto_enumTypes[3]
}

func (x ModeratePostTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModeratePostTypeEnum.Descriptor instead.
func (ModeratePostTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{3}
}

// Map posts #
type MapPostTypeEnum int32

const (
	MapPostTypeEnum_generic MapPostTypeEnum = 0
	MapPostTypeEnum_quest   MapPostTypeEnum = 1
)

// Enum value maps for MapPostTypeEnum.
var (
	MapPostTypeEnum_name = map[int32]string{
		0: "generic",
		1: "quest",
	}
	MapPostTypeEnum_value = map[string]int32{
		"generic": 0,
		"quest":   1,
	}
)

func (x MapPostTypeEnum) Enum() *MapPostTypeEnum {
	p := new(MapPostTypeEnum)
	*p = x
	return p
}

func (x MapPostTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MapPostTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_social_proto_enumTypes[4].Descriptor()
}

func (MapPostTypeEnum) Type() protoreflect.EnumType {
	return &file_social_proto_enumTypes[4]
}

func (x MapPostTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MapPostTypeEnum.Descriptor instead.
func (MapPostTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{4}
}

type PostCompositeID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	WallId   uint64 `protobuf:"varint,2,opt,name=wall_id,json=wallId,proto3" json:"wall_id,omitempty"`
	PostId   uint64 `protobuf:"varint,3,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *PostCompositeID) Reset() {
	*x = PostCompositeID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCompositeID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCompositeID) ProtoMessage() {}

func (x *PostCompositeID) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCompositeID.ProtoReflect.Descriptor instead.
func (*PostCompositeID) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{0}
}

func (x *PostCompositeID) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *PostCompositeID) GetWallId() uint64 {
	if x != nil {
		return x.WallId
	}
	return 0
}

func (x *PostCompositeID) GetPostId() uint64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

// Многослойный набор картинок поста, для первой версии будут png'шками, которые в AR рисуются друг над другом
// Потом могут превратиться в 3d-модели со скриптами анимаций, шейдерами и т.п.
type ARPoster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LayoutImagesUrls []string `protobuf:"bytes,1,rep,name=layout_images_urls,json=layoutImagesUrls,proto3" json:"layout_images_urls,omitempty"`
	Model            *Model3D `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *ARPoster) Reset() {
	*x = ARPoster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ARPoster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ARPoster) ProtoMessage() {}

func (x *ARPoster) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ARPoster.ProtoReflect.Descriptor instead.
func (*ARPoster) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{1}
}

func (x *ARPoster) GetLayoutImagesUrls() []string {
	if x != nil {
		return x.LayoutImagesUrls
	}
	return nil
}

func (x *ARPoster) GetModel() *Model3D {
	if x != nil {
		return x.Model
	}
	return nil
}

// Poster от ARPoster будет отличаться тем, что первый будет оставаться картинкой для соцсети, второй будет объектом
// 3d-сцены в AR-режиме
type Poster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl        string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	BackgroundColor string `protobuf:"bytes,2,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
}

func (x *Poster) Reset() {
	*x = Poster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Poster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poster) ProtoMessage() {}

func (x *Poster) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poster.ProtoReflect.Descriptor instead.
func (*Poster) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{2}
}

func (x *Poster) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Poster) GetBackgroundColor() string {
	if x != nil {
		return x.BackgroundColor
	}
	return ""
}

type TextPostContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextObject *RichText `protobuf:"bytes,1,opt,name=text_object,json=textObject,proto3" json:"text_object,omitempty"`
}

func (x *TextPostContent) Reset() {
	*x = TextPostContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextPostContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextPostContent) ProtoMessage() {}

func (x *TextPostContent) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextPostContent.ProtoReflect.Descriptor instead.
func (*TextPostContent) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{3}
}

func (x *TextPostContent) GetTextObject() *RichText {
	if x != nil {
		return x.TextObject
	}
	return nil
}

type AudioPostContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioObject *Audio `protobuf:"bytes,1,opt,name=audio_object,json=audioObject,proto3" json:"audio_object,omitempty"`
}

func (x *AudioPostContent) Reset() {
	*x = AudioPostContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioPostContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioPostContent) ProtoMessage() {}

func (x *AudioPostContent) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioPostContent.ProtoReflect.Descriptor instead.
func (*AudioPostContent) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{4}
}

func (x *AudioPostContent) GetAudioObject() *Audio {
	if x != nil {
		return x.AudioObject
	}
	return nil
}

type PhotoPostContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoObject *Photo `protobuf:"bytes,1,opt,name=photo_object,json=photoObject,proto3" json:"photo_object,omitempty"`
}

func (x *PhotoPostContent) Reset() {
	*x = PhotoPostContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoPostContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoPostContent) ProtoMessage() {}

func (x *PhotoPostContent) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoPostContent.ProtoReflect.Descriptor instead.
func (*PhotoPostContent) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{5}
}

func (x *PhotoPostContent) GetPhotoObject() *Photo {
	if x != nil {
		return x.PhotoObject
	}
	return nil
}

type VideoPostContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoObject  *Video `protobuf:"bytes,1,opt,name=video_object,json=videoObject,proto3" json:"video_object,omitempty"`
	VideoPreview *Photo `protobuf:"bytes,2,opt,name=video_preview,json=videoPreview,proto3" json:"video_preview,omitempty"` // jpg/png/gif/webm/mp4 1fps
}

func (x *VideoPostContent) Reset() {
	*x = VideoPostContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPostContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPostContent) ProtoMessage() {}

func (x *VideoPostContent) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPostContent.ProtoReflect.Descriptor instead.
func (*VideoPostContent) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{6}
}

func (x *VideoPostContent) GetVideoObject() *Video {
	if x != nil {
		return x.VideoObject
	}
	return nil
}

func (x *VideoPostContent) GetVideoPreview() *Photo {
	if x != nil {
		return x.VideoPreview
	}
	return nil
}

type StickerPostContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StickerPostContent) Reset() {
	*x = StickerPostContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StickerPostContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StickerPostContent) ProtoMessage() {}

func (x *StickerPostContent) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StickerPostContent.ProtoReflect.Descriptor instead.
func (*StickerPostContent) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{7}
}

type PostContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*PostContent_Text
	//	*PostContent_Photo
	//	*PostContent_Audio
	//	*PostContent_Video
	//	*PostContent_Sticker
	Content isPostContent_Content `protobuf_oneof:"content"`
}

func (x *PostContent) Reset() {
	*x = PostContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostContent) ProtoMessage() {}

func (x *PostContent) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostContent.ProtoReflect.Descriptor instead.
func (*PostContent) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{8}
}

func (m *PostContent) GetContent() isPostContent_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *PostContent) GetText() *TextPostContent {
	if x, ok := x.GetContent().(*PostContent_Text); ok {
		return x.Text
	}
	return nil
}

func (x *PostContent) GetPhoto() *PhotoPostContent {
	if x, ok := x.GetContent().(*PostContent_Photo); ok {
		return x.Photo
	}
	return nil
}

func (x *PostContent) GetAudio() *AudioPostContent {
	if x, ok := x.GetContent().(*PostContent_Audio); ok {
		return x.Audio
	}
	return nil
}

func (x *PostContent) GetVideo() *VideoPostContent {
	if x, ok := x.GetContent().(*PostContent_Video); ok {
		return x.Video
	}
	return nil
}

func (x *PostContent) GetSticker() *StickerPostContent {
	if x, ok := x.GetContent().(*PostContent_Sticker); ok {
		return x.Sticker
	}
	return nil
}

type isPostContent_Content interface {
	isPostContent_Content()
}

type PostContent_Text struct {
	Text *TextPostContent `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type PostContent_Photo struct {
	Photo *PhotoPostContent `protobuf:"bytes,2,opt,name=photo,proto3,oneof"`
}

type PostContent_Audio struct {
	Audio *AudioPostContent `protobuf:"bytes,3,opt,name=audio,proto3,oneof"`
}

type PostContent_Video struct {
	Video *VideoPostContent `protobuf:"bytes,4,opt,name=video,proto3,oneof"`
}

type PostContent_Sticker struct {
	Sticker *StickerPostContent `protobuf:"bytes,5,opt,name=sticker,proto3,oneof"`
}

func (*PostContent_Text) isPostContent_Content() {}

func (*PostContent_Photo) isPostContent_Content() {}

func (*PostContent_Audio) isPostContent_Content() {}

func (*PostContent_Video) isPostContent_Content() {}

func (*PostContent_Sticker) isPostContent_Content() {}

type ShortUserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FullName  string `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	Username  string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Avatar    *Photo `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *ShortUserProfile) Reset() {
	*x = ShortUserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortUserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortUserProfile) ProtoMessage() {}

func (x *ShortUserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortUserProfile.ProtoReflect.Descriptor instead.
func (*ShortUserProfile) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{9}
}

func (x *ShortUserProfile) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShortUserProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShortUserProfile) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *ShortUserProfile) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *ShortUserProfile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ShortUserProfile) GetAvatar() *Photo {
	if x != nil {
		return x.Avatar
	}
	return nil
}

type OriginalID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalId *PostCompositeID `protobuf:"bytes,1,opt,name=original_id,json=originalId,proto3" json:"original_id,omitempty"`
	ParentId   *PostCompositeID `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
}

func (x *OriginalID) Reset() {
	*x = OriginalID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginalID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginalID) ProtoMessage() {}

func (x *OriginalID) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginalID.ProtoReflect.Descriptor instead.
func (*OriginalID) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{10}
}

func (x *OriginalID) GetOriginalId() *PostCompositeID {
	if x != nil {
		return x.OriginalId
	}
	return nil
}

func (x *OriginalID) GetParentId() *PostCompositeID {
	if x != nil {
		return x.ParentId
	}
	return nil
}

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       *PostCompositeID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User                     *ShortUserProfile `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`   //при создании поста может быть пустым, но при загрузке нужен
	Title                    string            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"` // [(validate.rules).string.max_len = 72]; //max_len = 72 unicode points (with emojies)
	Coordinates              *GpsCoordinates   `protobuf:"bytes,4,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	PostType                 PostTypeEnum      `protobuf:"varint,5,opt,name=post_type,json=postType,proto3,enum=social.PostTypeEnum" json:"post_type,omitempty"`
	Content                  *PostContent      `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	PostTransform            *Matrix4X4        `protobuf:"bytes,7,opt,name=post_transform,json=postTransform,proto3" json:"post_transform,omitempty"` //TODO
	Poster                   *Poster           `protobuf:"bytes,8,opt,name=poster,proto3" json:"poster,omitempty"`
	ArPoster                 *ARPoster         `protobuf:"bytes,9,opt,name=ar_poster,json=arPoster,proto3" json:"ar_poster,omitempty"`
	OriginalId               *OriginalID       `protobuf:"bytes,10,opt,name=original_id,json=originalId,proto3" json:"original_id,omitempty"`
	LikesCount               uint64            `protobuf:"varint,11,opt,name=likes_count,json=likesCount,proto3" json:"likes_count,omitempty"`
	Created                  float64           `protobuf:"fixed64,12,opt,name=created,proto3" json:"created,omitempty"`
	Updated                  float64           `protobuf:"fixed64,13,opt,name=updated,proto3" json:"updated,omitempty"`
	IsQuickPost              bool              `protobuf:"varint,14,opt,name=is_quick_post,json=isQuickPost,proto3" json:"is_quick_post,omitempty"`
	ViewsCount               uint64            `protobuf:"varint,15,opt,name=views_count,json=viewsCount,proto3" json:"views_count,omitempty"`
	ScaleVariant             uint32            `protobuf:"varint,16,opt,name=scale_variant,json=scaleVariant,proto3" json:"scale_variant,omitempty"` // 1, 2, 3 or 4, where 1 - 1x1, 2 - 2x2, 3 - 2x4, 4 - 4x8
	CommentsNodeId           uint32            `protobuf:"varint,17,opt,name=comments_node_id,json=commentsNodeId,proto3" json:"comments_node_id,omitempty"`
	LikesNodeId              uint32            `protobuf:"varint,18,opt,name=likes_node_id,json=likesNodeId,proto3" json:"likes_node_id,omitempty"`
	IsLiked                  bool              `protobuf:"varint,19,opt,name=is_liked,json=isLiked,proto3" json:"is_liked,omitempty"`
	IsQuestPost              bool              `protobuf:"varint,20,opt,name=is_quest_post,json=isQuestPost,proto3" json:"is_quest_post,omitempty"`
	GoogleCloudAnchorsRoomId string            `protobuf:"bytes,21,opt,name=google_cloud_anchors_room_id,json=googleCloudAnchorsRoomId,proto3" json:"google_cloud_anchors_room_id,omitempty"` //fallback для Android, если не получится вовремя со своим позиционированием в мероприятиях с размещением 3d-моделей
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{11}
}

func (x *Post) GetId() *PostCompositeID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Post) GetUser() *ShortUserProfile {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Post) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Post) GetCoordinates() *GpsCoordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *Post) GetPostType() PostTypeEnum {
	if x != nil {
		return x.PostType
	}
	return PostTypeEnum_undefined_post_type
}

func (x *Post) GetContent() *PostContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Post) GetPostTransform() *Matrix4X4 {
	if x != nil {
		return x.PostTransform
	}
	return nil
}

func (x *Post) GetPoster() *Poster {
	if x != nil {
		return x.Poster
	}
	return nil
}

func (x *Post) GetArPoster() *ARPoster {
	if x != nil {
		return x.ArPoster
	}
	return nil
}

func (x *Post) GetOriginalId() *OriginalID {
	if x != nil {
		return x.OriginalId
	}
	return nil
}

func (x *Post) GetLikesCount() uint64 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

func (x *Post) GetCreated() float64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Post) GetUpdated() float64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *Post) GetIsQuickPost() bool {
	if x != nil {
		return x.IsQuickPost
	}
	return false
}

func (x *Post) GetViewsCount() uint64 {
	if x != nil {
		return x.ViewsCount
	}
	return 0
}

func (x *Post) GetScaleVariant() uint32 {
	if x != nil {
		return x.ScaleVariant
	}
	return 0
}

func (x *Post) GetCommentsNodeId() uint32 {
	if x != nil {
		return x.CommentsNodeId
	}
	return 0
}

func (x *Post) GetLikesNodeId() uint32 {
	if x != nil {
		return x.LikesNodeId
	}
	return 0
}

func (x *Post) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

func (x *Post) GetIsQuestPost() bool {
	if x != nil {
		return x.IsQuestPost
	}
	return false
}

func (x *Post) GetGoogleCloudAnchorsRoomId() string {
	if x != nil {
		return x.GoogleCloudAnchorsRoomId
	}
	return ""
}

type CreatePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                    string           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	PostType                 PostTypeEnum     `protobuf:"varint,2,opt,name=post_type,json=postType,proto3,enum=social.PostTypeEnum" json:"post_type,omitempty"`
	Content                  *PostContent     `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Coordinates              *GpsCoordinates  `protobuf:"bytes,4,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	ExtraId                  *PostCompositeID `protobuf:"bytes,5,opt,name=extra_id,json=extraId,proto3" json:"extra_id,omitempty"`
	Poster                   *Poster          `protobuf:"bytes,6,opt,name=poster,proto3" json:"poster,omitempty"`
	ArPoster                 *ARPoster        `protobuf:"bytes,7,opt,name=ar_poster,json=arPoster,proto3" json:"ar_poster,omitempty"`
	PostTransform            *Matrix4X4       `protobuf:"bytes,8,opt,name=post_transform,json=postTransform,proto3" json:"post_transform,omitempty"`
	FrameIndex               uint32           `protobuf:"varint,19,opt,name=frame_index,json=frameIndex,proto3" json:"frame_index,omitempty"` // индекс кадра, для которого мы post_transform берем
	PostVisibility           PostVisibility   `protobuf:"varint,9,opt,name=post_visibility,json=postVisibility,proto3,enum=social.PostVisibility" json:"post_visibility,omitempty"`
	TargetUsers              []uint64         `protobuf:"varint,10,rep,packed,name=target_users,json=targetUsers,proto3" json:"target_users,omitempty"`
	TargetChats              []uint64         `protobuf:"varint,11,rep,packed,name=target_chats,json=targetChats,proto3" json:"target_chats,omitempty"`
	LimitedTime              uint64           `protobuf:"varint,12,opt,name=limited_time,json=limitedTime,proto3" json:"limited_time,omitempty"`
	DisappearAfterView       bool             `protobuf:"varint,13,opt,name=disappear_after_view,json=disappearAfterView,proto3" json:"disappear_after_view,omitempty"`
	OnlyInAr                 bool             `protobuf:"varint,14,opt,name=only_in_ar,json=onlyInAr,proto3" json:"only_in_ar,omitempty"`
	TargetPhones             []string         `protobuf:"bytes,15,rep,name=target_phones,json=targetPhones,proto3" json:"target_phones,omitempty"`
	IsQuickPost              bool             `protobuf:"varint,16,opt,name=is_quick_post,json=isQuickPost,proto3" json:"is_quick_post,omitempty"`
	ScaleVariant             uint32           `protobuf:"varint,17,opt,name=scale_variant,json=scaleVariant,proto3" json:"scale_variant,omitempty"` // 1, 2, 3 or 4, where 1 - xs, 4 - xl
	IsQuestPost              bool             `protobuf:"varint,18,opt,name=is_quest_post,json=isQuestPost,proto3" json:"is_quest_post,omitempty"`
	GoogleCloudAnchorsRoomId string           `protobuf:"bytes,20,opt,name=google_cloud_anchors_room_id,json=googleCloudAnchorsRoomId,proto3" json:"google_cloud_anchors_room_id,omitempty"` //fallback для Android, если не получится вовремя со своим позиционированием в мероприятиях с размещением 3d-моделей
	// string associated_worldmap_id = 19;
	IsTest bool `protobuf:"varint,21,opt,name=is_test,json=isTest,proto3" json:"is_test,omitempty"`
}

func (x *CreatePostRequest) Reset() {
	*x = CreatePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRequest) ProtoMessage() {}

func (x *CreatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRequest.ProtoReflect.Descriptor instead.
func (*CreatePostRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{12}
}

func (x *CreatePostRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatePostRequest) GetPostType() PostTypeEnum {
	if x != nil {
		return x.PostType
	}
	return PostTypeEnum_undefined_post_type
}

func (x *CreatePostRequest) GetContent() *PostContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CreatePostRequest) GetCoordinates() *GpsCoordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *CreatePostRequest) GetExtraId() *PostCompositeID {
	if x != nil {
		return x.ExtraId
	}
	return nil
}

func (x *CreatePostRequest) GetPoster() *Poster {
	if x != nil {
		return x.Poster
	}
	return nil
}

func (x *CreatePostRequest) GetArPoster() *ARPoster {
	if x != nil {
		return x.ArPoster
	}
	return nil
}

func (x *CreatePostRequest) GetPostTransform() *Matrix4X4 {
	if x != nil {
		return x.PostTransform
	}
	return nil
}

func (x *CreatePostRequest) GetFrameIndex() uint32 {
	if x != nil {
		return x.FrameIndex
	}
	return 0
}

func (x *CreatePostRequest) GetPostVisibility() PostVisibility {
	if x != nil {
		return x.PostVisibility
	}
	return PostVisibility_all
}

func (x *CreatePostRequest) GetTargetUsers() []uint64 {
	if x != nil {
		return x.TargetUsers
	}
	return nil
}

func (x *CreatePostRequest) GetTargetChats() []uint64 {
	if x != nil {
		return x.TargetChats
	}
	return nil
}

func (x *CreatePostRequest) GetLimitedTime() uint64 {
	if x != nil {
		return x.LimitedTime
	}
	return 0
}

func (x *CreatePostRequest) GetDisappearAfterView() bool {
	if x != nil {
		return x.DisappearAfterView
	}
	return false
}

func (x *CreatePostRequest) GetOnlyInAr() bool {
	if x != nil {
		return x.OnlyInAr
	}
	return false
}

func (x *CreatePostRequest) GetTargetPhones() []string {
	if x != nil {
		return x.TargetPhones
	}
	return nil
}

func (x *CreatePostRequest) GetIsQuickPost() bool {
	if x != nil {
		return x.IsQuickPost
	}
	return false
}

func (x *CreatePostRequest) GetScaleVariant() uint32 {
	if x != nil {
		return x.ScaleVariant
	}
	return 0
}

func (x *CreatePostRequest) GetIsQuestPost() bool {
	if x != nil {
		return x.IsQuestPost
	}
	return false
}

func (x *CreatePostRequest) GetGoogleCloudAnchorsRoomId() string {
	if x != nil {
		return x.GoogleCloudAnchorsRoomId
	}
	return ""
}

func (x *CreatePostRequest) GetIsTest() bool {
	if x != nil {
		return x.IsTest
	}
	return false
}

type DeletePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *PostCompositeID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePostRequest) Reset() {
	*x = DeletePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostRequest) ProtoMessage() {}

func (x *DeletePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostRequest.ProtoReflect.Descriptor instead.
func (*DeletePostRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{13}
}

func (x *DeletePostRequest) GetId() *PostCompositeID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeletePostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids *PostIdList `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeletePostsRequest) Reset() {
	*x = DeletePostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostsRequest) ProtoMessage() {}

func (x *DeletePostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostsRequest.ProtoReflect.Descriptor instead.
func (*DeletePostsRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{14}
}

func (x *DeletePostsRequest) GetIds() *PostIdList {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetWallPostIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WallId uint64 `protobuf:"varint,1,opt,name=wall_id,json=wallId,proto3" json:"wall_id,omitempty"`
}

func (x *GetWallPostIdsRequest) Reset() {
	*x = GetWallPostIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWallPostIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWallPostIdsRequest) ProtoMessage() {}

func (x *GetWallPostIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWallPostIdsRequest.ProtoReflect.Descriptor instead.
func (*GetWallPostIdsRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{15}
}

func (x *GetWallPostIdsRequest) GetWallId() uint64 {
	if x != nil {
		return x.WallId
	}
	return 0
}

type PostList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostList []*Post `protobuf:"bytes,1,rep,name=post_list,json=postList,proto3" json:"post_list,omitempty"`
}

func (x *PostList) Reset() {
	*x = PostList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostList) ProtoMessage() {}

func (x *PostList) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostList.ProtoReflect.Descriptor instead.
func (*PostList) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{16}
}

func (x *PostList) GetPostList() []*Post {
	if x != nil {
		return x.PostList
	}
	return nil
}

type CoordinatesPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *PostCompositeID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Coordinates *GpsCoordinates  `protobuf:"bytes,2,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
}

func (x *CoordinatesPost) Reset() {
	*x = CoordinatesPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordinatesPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatesPost) ProtoMessage() {}

func (x *CoordinatesPost) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatesPost.ProtoReflect.Descriptor instead.
func (*CoordinatesPost) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{17}
}

func (x *CoordinatesPost) GetId() *PostCompositeID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CoordinatesPost) GetCoordinates() *GpsCoordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

type CoordinatesPostList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostList []*CoordinatesPost `protobuf:"bytes,1,rep,name=post_list,json=postList,proto3" json:"post_list,omitempty"`
}

func (x *CoordinatesPostList) Reset() {
	*x = CoordinatesPostList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordinatesPostList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatesPostList) ProtoMessage() {}

func (x *CoordinatesPostList) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatesPostList.ProtoReflect.Descriptor instead.
func (*CoordinatesPostList) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{18}
}

func (x *CoordinatesPostList) GetPostList() []*CoordinatesPost {
	if x != nil {
		return x.PostList
	}
	return nil
}

type PostIdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostList []*PostCompositeID `protobuf:"bytes,1,rep,name=post_list,json=postList,proto3" json:"post_list,omitempty"`
}

func (x *PostIdList) Reset() {
	*x = PostIdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostIdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostIdList) ProtoMessage() {}

func (x *PostIdList) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostIdList.ProtoReflect.Descriptor instead.
func (*PostIdList) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{19}
}

func (x *PostIdList) GetPostList() []*PostCompositeID {
	if x != nil {
		return x.PostList
	}
	return nil
}

type SBaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SBaseReply) Reset() {
	*x = SBaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBaseReply) ProtoMessage() {}

func (x *SBaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBaseReply.ProtoReflect.Descriptor instead.
func (*SBaseReply) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{20}
}

type SBaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SBaseRequest) Reset() {
	*x = SBaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBaseRequest) ProtoMessage() {}

func (x *SBaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBaseRequest.ProtoReflect.Descriptor instead.
func (*SBaseRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{21}
}

type WallID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WallId uint64 `protobuf:"varint,1,opt,name=wall_id,json=wallId,proto3" json:"wall_id,omitempty"`
}

func (x *WallID) Reset() {
	*x = WallID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WallID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WallID) ProtoMessage() {}

func (x *WallID) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WallID.ProtoReflect.Descriptor instead.
func (*WallID) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{22}
}

func (x *WallID) GetWallId() uint64 {
	if x != nil {
		return x.WallId
	}
	return 0
}

type FollowerID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerId uint64 `protobuf:"varint,1,opt,name=follower_id,json=followerId,proto3" json:"follower_id,omitempty"`
}

func (x *FollowerID) Reset() {
	*x = FollowerID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowerID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowerID) ProtoMessage() {}

func (x *FollowerID) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowerID.ProtoReflect.Descriptor instead.
func (*FollowerID) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{23}
}

func (x *FollowerID) GetFollowerId() uint64 {
	if x != nil {
		return x.FollowerId
	}
	return 0
}

type SUserIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SUserIDs) Reset() {
	*x = SUserIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SUserIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SUserIDs) ProtoMessage() {}

func (x *SUserIDs) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SUserIDs.ProtoReflect.Descriptor instead.
func (*SUserIDs) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{24}
}

func (x *SUserIDs) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetPostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids *PostIdList `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetPostsRequest) Reset() {
	*x = GetPostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostsRequest) ProtoMessage() {}

func (x *GetPostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostsRequest.ProtoReflect.Descriptor instead.
func (*GetPostsRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{25}
}

func (x *GetPostsRequest) GetIds() *PostIdList {
	if x != nil {
		return x.Ids
	}
	return nil
}

type FilterQuestsPostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids *PostIdList `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
}

func (x *FilterQuestsPostsRequest) Reset() {
	*x = FilterQuestsPostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterQuestsPostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterQuestsPostsRequest) ProtoMessage() {}

func (x *FilterQuestsPostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterQuestsPostsRequest.ProtoReflect.Descriptor instead.
func (*FilterQuestsPostsRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{26}
}

func (x *FilterQuestsPostsRequest) GetIds() *PostIdList {
	if x != nil {
		return x.Ids
	}
	return nil
}

type AddLikeToPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpostId *PostCompositeID `protobuf:"bytes,1,opt,name=cpost_id,json=cpostId,proto3" json:"cpost_id,omitempty"`
}

func (x *AddLikeToPostRequest) Reset() {
	*x = AddLikeToPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLikeToPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLikeToPostRequest) ProtoMessage() {}

func (x *AddLikeToPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLikeToPostRequest.ProtoReflect.Descriptor instead.
func (*AddLikeToPostRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{27}
}

func (x *AddLikeToPostRequest) GetCpostId() *PostCompositeID {
	if x != nil {
		return x.CpostId
	}
	return nil
}

type DeleteLikeFromPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpostId     *PostCompositeID `protobuf:"bytes,1,opt,name=cpost_id,json=cpostId,proto3" json:"cpost_id,omitempty"`
	LikesNodeId uint32           `protobuf:"varint,2,opt,name=likes_node_id,json=likesNodeId,proto3" json:"likes_node_id,omitempty"`
}

func (x *DeleteLikeFromPostRequest) Reset() {
	*x = DeleteLikeFromPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLikeFromPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLikeFromPostRequest) ProtoMessage() {}

func (x *DeleteLikeFromPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLikeFromPostRequest.ProtoReflect.Descriptor instead.
func (*DeleteLikeFromPostRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteLikeFromPostRequest) GetCpostId() *PostCompositeID {
	if x != nil {
		return x.CpostId
	}
	return nil
}

func (x *DeleteLikeFromPostRequest) GetLikesNodeId() uint32 {
	if x != nil {
		return x.LikesNodeId
	}
	return 0
}

type GetLikersFromPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpostId     *PostCompositeID `protobuf:"bytes,1,opt,name=cpost_id,json=cpostId,proto3" json:"cpost_id,omitempty"`
	LikesNodeId uint64           `protobuf:"varint,2,opt,name=likes_node_id,json=likesNodeId,proto3" json:"likes_node_id,omitempty"`
}

func (x *GetLikersFromPostRequest) Reset() {
	*x = GetLikersFromPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikersFromPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikersFromPostRequest) ProtoMessage() {}

func (x *GetLikersFromPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikersFromPostRequest.ProtoReflect.Descriptor instead.
func (*GetLikersFromPostRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{29}
}

func (x *GetLikersFromPostRequest) GetCpostId() *PostCompositeID {
	if x != nil {
		return x.CpostId
	}
	return nil
}

func (x *GetLikersFromPostRequest) GetLikesNodeId() uint64 {
	if x != nil {
		return x.LikesNodeId
	}
	return 0
}

type PostViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpostId *PostCompositeID `protobuf:"bytes,1,opt,name=cpost_id,json=cpostId,proto3" json:"cpost_id,omitempty"`
}

func (x *PostViewRequest) Reset() {
	*x = PostViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostViewRequest) ProtoMessage() {}

func (x *PostViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostViewRequest.ProtoReflect.Descriptor instead.
func (*PostViewRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{30}
}

func (x *PostViewRequest) GetCpostId() *PostCompositeID {
	if x != nil {
		return x.CpostId
	}
	return nil
}

type PostIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpostId *PostCompositeID `protobuf:"bytes,1,opt,name=cpost_id,json=cpostId,proto3" json:"cpost_id,omitempty"`
}

func (x *PostIdRequest) Reset() {
	*x = PostIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostIdRequest) ProtoMessage() {}

func (x *PostIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostIdRequest.ProtoReflect.Descriptor instead.
func (*PostIdRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{31}
}

func (x *PostIdRequest) GetCpostId() *PostCompositeID {
	if x != nil {
		return x.CpostId
	}
	return nil
}

type RRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinates *GpsCoordinates `protobuf:"bytes,1,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	Radius      uint32          `protobuf:"varint,2,opt,name=radius,proto3" json:"radius,omitempty"` //in meters
}

func (x *RRequest) Reset() {
	*x = RRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RRequest) ProtoMessage() {}

func (x *RRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RRequest.ProtoReflect.Descriptor instead.
func (*RRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{32}
}

func (x *RRequest) GetCoordinates() *GpsCoordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *RRequest) GetRadius() uint32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type ReportPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpostId *PostCompositeID   `protobuf:"bytes,1,opt,name=cpost_id,json=cpostId,proto3" json:"cpost_id,omitempty"`
	RType   ReportPostTypeEnum `protobuf:"varint,2,opt,name=r_type,json=rType,proto3,enum=social.ReportPostTypeEnum" json:"r_type,omitempty"`
	Comment string             `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *ReportPostRequest) Reset() {
	*x = ReportPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportPostRequest) ProtoMessage() {}

func (x *ReportPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportPostRequest.ProtoReflect.Descriptor instead.
func (*ReportPostRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{33}
}

func (x *ReportPostRequest) GetCpostId() *PostCompositeID {
	if x != nil {
		return x.CpostId
	}
	return nil
}

func (x *ReportPostRequest) GetRType() ReportPostTypeEnum {
	if x != nil {
		return x.RType
	}
	return ReportPostTypeEnum_inappropriate
}

func (x *ReportPostRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ModeratePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpostId *PostCompositeID   `protobuf:"bytes,1,opt,name=cpost_id,json=cpostId,proto3" json:"cpost_id,omitempty"`
	PType   ReportPostTypeEnum `protobuf:"varint,2,opt,name=p_type,json=pType,proto3,enum=social.ReportPostTypeEnum" json:"p_type,omitempty"`
}

func (x *ModeratePostRequest) Reset() {
	*x = ModeratePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModeratePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeratePostRequest) ProtoMessage() {}

func (x *ModeratePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeratePostRequest.ProtoReflect.Descriptor instead.
func (*ModeratePostRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{34}
}

func (x *ModeratePostRequest) GetCpostId() *PostCompositeID {
	if x != nil {
		return x.CpostId
	}
	return nil
}

func (x *ModeratePostRequest) GetPType() ReportPostTypeEnum {
	if x != nil {
		return x.PType
	}
	return ReportPostTypeEnum_inappropriate
}

type MapPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpostId     *PostCompositeID `protobuf:"bytes,1,opt,name=cpost_id,json=cpostId,proto3" json:"cpost_id,omitempty"`
	PostType    MapPostTypeEnum  `protobuf:"varint,2,opt,name=post_type,json=postType,proto3,enum=social.MapPostTypeEnum" json:"post_type,omitempty"`
	Coordinates *GpsCoordinates  `protobuf:"bytes,3,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	ImageUrl    string           `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *MapPost) Reset() {
	*x = MapPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapPost) ProtoMessage() {}

func (x *MapPost) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapPost.ProtoReflect.Descriptor instead.
func (*MapPost) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{35}
}

func (x *MapPost) GetCpostId() *PostCompositeID {
	if x != nil {
		return x.CpostId
	}
	return nil
}

func (x *MapPost) GetPostType() MapPostTypeEnum {
	if x != nil {
		return x.PostType
	}
	return MapPostTypeEnum_generic
}

func (x *MapPost) GetCoordinates() *GpsCoordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *MapPost) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type MapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapPosts []*MapPost `protobuf:"bytes,1,rep,name=map_posts,json=mapPosts,proto3" json:"map_posts,omitempty"`
}

func (x *MapResponse) Reset() {
	*x = MapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapResponse) ProtoMessage() {}

func (x *MapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapResponse.ProtoReflect.Descriptor instead.
func (*MapResponse) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{36}
}

func (x *MapResponse) GetMapPosts() []*MapPost {
	if x != nil {
		return x.MapPosts
	}
	return nil
}

type MapPostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinates *GpsCoordinates `protobuf:"bytes,1,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	Radius      uint32          `protobuf:"varint,2,opt,name=radius,proto3" json:"radius,omitempty"` //in meters
}

func (x *MapPostsRequest) Reset() {
	*x = MapPostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapPostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapPostsRequest) ProtoMessage() {}

func (x *MapPostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapPostsRequest.ProtoReflect.Descriptor instead.
func (*MapPostsRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{37}
}

func (x *MapPostsRequest) GetCoordinates() *GpsCoordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *MapPostsRequest) GetRadius() uint32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type GetPostsByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids            *SUserIDs `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	CreatedTsBegin float64   `protobuf:"fixed64,2,opt,name=created_ts_begin,json=createdTsBegin,proto3" json:"created_ts_begin,omitempty"`
	CreatedTsEnd   float64   `protobuf:"fixed64,3,opt,name=created_ts_end,json=createdTsEnd,proto3" json:"created_ts_end,omitempty"`
	Offset         uint64    `protobuf:"varint,1000,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetPostsByAdminRequest) Reset() {
	*x = GetPostsByAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostsByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostsByAdminRequest) ProtoMessage() {}

func (x *GetPostsByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostsByAdminRequest.ProtoReflect.Descriptor instead.
func (*GetPostsByAdminRequest) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{38}
}

func (x *GetPostsByAdminRequest) GetIds() *SUserIDs {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetPostsByAdminRequest) GetCreatedTsBegin() float64 {
	if x != nil {
		return x.CreatedTsBegin
	}
	return 0
}

func (x *GetPostsByAdminRequest) GetCreatedTsEnd() float64 {
	if x != nil {
		return x.CreatedTsEnd
	}
	return 0
}

func (x *GetPostsByAdminRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

var File_social_proto protoreflect.FileDescriptor

var file_social_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x1a, 0x10, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x08, 0x41, 0x52,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x55, 0x72, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x33, 0x64, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22,
	0x50, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x22, 0x48, 0x0a, 0x0f, 0x54, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x48, 0x0a, 0x10, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x34, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x48, 0x0a, 0x10, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x80, 0x01, 0x0a, 0x10, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x0b, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x95, 0x02, 0x0a, 0x0b, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x30, 0x0a, 0x05, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x36, 0x0a,
	0x07, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0xb9, 0x01, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x7c, 0x0a, 0x0a,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0b, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe9, 0x06, 0x0a, 0x04, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x47, 0x70, 0x73, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x31,
	0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x3c, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x34, 0x78, 0x34, 0x52,
	0x0d, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x26,
	0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x09, 0x61, 0x72, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x41, 0x52, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x61, 0x72, 0x50,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0a,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69,
	0x6b, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x69, 0x6b, 0x65,
	0x73, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x69,
	0x6b, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x69, 0x6b,
	0x65, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x73, 0x5f, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x73,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x98, 0x07, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x70, 0x73, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x07, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2d,
	0x0a, 0x09, 0x61, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x41, 0x52, 0x50, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x08, 0x61, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a,
	0x0e, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x34, 0x78, 0x34, 0x52, 0x0d, 0x70, 0x6f,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3f, 0x0a, 0x0f,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x70,
	0x6f, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70,
	0x65, 0x61, 0x72, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1c, 0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x79,
	0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x6e,
	0x6c, 0x79, 0x49, 0x6e, 0x41, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x69,
	0x73, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x73,
	0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x74,
	0x65, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x54, 0x65, 0x73,
	0x74, 0x22, 0x3c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x3a, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x30, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x35, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x0f, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x47, 0x70, 0x73, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x22, 0x4b,
	0x0a, 0x13, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x0a, 0x50,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x0c, 0x0a, 0x0a, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0e, 0x0a,
	0x0c, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x21, 0x0a,
	0x06, 0x57, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x49, 0x64,
	0x22, 0x2d, 0x0a, 0x0a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x1c, 0x0a, 0x08, 0x53, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x37, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x40, 0x0a, 0x18, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x4a, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4c,
	0x69, 0x6b, 0x65, 0x54, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x08, 0x63, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x07, 0x63, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69,
	0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x07, 0x63, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x69,
	0x6b, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44,
	0x52, 0x07, 0x63, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x69, 0x6b,
	0x65, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x45, 0x0a,
	0x0f, 0x50, 0x6f, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x08, 0x63, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x07, 0x63, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44,
	0x52, 0x07, 0x63, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x08, 0x52, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x70, 0x73, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x11,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x07, 0x63, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x05, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x7c, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x65, 0x49, 0x44, 0x52, 0x07, 0x63, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x06, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xce, 0x01, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08,
	0x63, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x52, 0x07, 0x63, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x70,
	0x50, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x70, 0x73, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x22, 0x3b, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x09, 0x6d, 0x61, 0x70, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x70,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x67,
	0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x47, 0x70, 0x73, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x73, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x73, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x5f, 0x65,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x73, 0x45, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2a,
	0x41, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x17, 0x0a, 0x13, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74,
	0x10, 0x02, 0x2a, 0x3f, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x10, 0x02, 0x2a, 0x3c, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x11, 0x0a, 0x0d, 0x69, 0x6e, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x73, 0x70, 0x61, 0x6d, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x10,
	0x02, 0x2a, 0x40, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0c, 0x0a, 0x08, 0x6e, 0x6f, 0x74,
	0x5f, 0x73, 0x65, 0x65, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x10, 0x02, 0x2a, 0x29, 0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x01, 0x32, 0x93,
	0x0d, 0x0a, 0x10, 0x41, 0x52, 0x4d, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x19, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x2e,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x2e, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73,
	0x12, 0x1d, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c,
	0x6c, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3b, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x2e,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x2e, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x0c,
	0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x50,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x46, 0x65,
	0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x73, 0x49, 0x6e, 0x47, 0x65, 0x6f, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x10, 0x2e,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x49, 0x6e, 0x47, 0x65, 0x6f, 0x52, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x12, 0x10, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x52, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x49, 0x6e, 0x47, 0x65, 0x6f, 0x52, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x12, 0x10, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x52, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x0e, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x31, 0x0a, 0x0b, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x0e,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x1a, 0x12,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x73, 0x49, 0x64, 0x73, 0x12, 0x0e, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x57,
	0x61, 0x6c, 0x6c, 0x49, 0x44, 0x1a, 0x10, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x37, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x12, 0x12, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x10,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73,
	0x12, 0x41, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x54, 0x6f, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x1c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69,
	0x6b, 0x65, 0x54, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x53, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x50, 0x6f, 0x73,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x49, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x65,
	0x61, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a,
	0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x73, 0x12, 0x20, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x70, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x4d, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe6, 0x01, 0x0a, 0x15, 0x41, 0x52, 0x4d, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x1e, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x73, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x19, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x2e,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x09, 0x5a,
	0x07, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_social_proto_rawDescOnce sync.Once
	file_social_proto_rawDescData = file_social_proto_rawDesc
)

func file_social_proto_rawDescGZIP() []byte {
	file_social_proto_rawDescOnce.Do(func() {
		file_social_proto_rawDescData = protoimpl.X.CompressGZIP(file_social_proto_rawDescData)
	})
	return file_social_proto_rawDescData
}

var file_social_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_social_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_social_proto_goTypes = []interface{}{
	(PostTypeEnum)(0),                 // 0: social.PostTypeEnum
	(PostVisibility)(0),               // 1: social.PostVisibility
	(ReportPostTypeEnum)(0),           // 2: social.ReportPostTypeEnum
	(ModeratePostTypeEnum)(0),         // 3: social.ModeratePostTypeEnum
	(MapPostTypeEnum)(0),              // 4: social.MapPostTypeEnum
	(*PostCompositeID)(nil),           // 5: social.PostCompositeID
	(*ARPoster)(nil),                  // 6: social.ARPoster
	(*Poster)(nil),                    // 7: social.Poster
	(*TextPostContent)(nil),           // 8: social.TextPostContent
	(*AudioPostContent)(nil),          // 9: social.AudioPostContent
	(*PhotoPostContent)(nil),          // 10: social.PhotoPostContent
	(*VideoPostContent)(nil),          // 11: social.VideoPostContent
	(*StickerPostContent)(nil),        // 12: social.StickerPostContent
	(*PostContent)(nil),               // 13: social.PostContent
	(*ShortUserProfile)(nil),          // 14: social.ShortUserProfile
	(*OriginalID)(nil),                // 15: social.OriginalID
	(*Post)(nil),                      // 16: social.Post
	(*CreatePostRequest)(nil),         // 17: social.CreatePostRequest
	(*DeletePostRequest)(nil),         // 18: social.DeletePostRequest
	(*DeletePostsRequest)(nil),        // 19: social.DeletePostsRequest
	(*GetWallPostIdsRequest)(nil),     // 20: social.GetWallPostIdsRequest
	(*PostList)(nil),                  // 21: social.PostList
	(*CoordinatesPost)(nil),           // 22: social.CoordinatesPost
	(*CoordinatesPostList)(nil),       // 23: social.CoordinatesPostList
	(*PostIdList)(nil),                // 24: social.PostIdList
	(*SBaseReply)(nil),                // 25: social.SBaseReply
	(*SBaseRequest)(nil),              // 26: social.SBaseRequest
	(*WallID)(nil),                    // 27: social.WallID
	(*FollowerID)(nil),                // 28: social.FollowerID
	(*SUserIDs)(nil),                  // 29: social.SUserIDs
	(*GetPostsRequest)(nil),           // 30: social.GetPostsRequest
	(*FilterQuestsPostsRequest)(nil),  // 31: social.FilterQuestsPostsRequest
	(*AddLikeToPostRequest)(nil),      // 32: social.AddLikeToPostRequest
	(*DeleteLikeFromPostRequest)(nil), // 33: social.DeleteLikeFromPostRequest
	(*GetLikersFromPostRequest)(nil),  // 34: social.GetLikersFromPostRequest
	(*PostViewRequest)(nil),           // 35: social.PostViewRequest
	(*PostIdRequest)(nil),             // 36: social.PostIdRequest
	(*RRequest)(nil),                  // 37: social.RRequest
	(*ReportPostRequest)(nil),         // 38: social.ReportPostRequest
	(*ModeratePostRequest)(nil),       // 39: social.ModeratePostRequest
	(*MapPost)(nil),                   // 40: social.MapPost
	(*MapResponse)(nil),               // 41: social.MapResponse
	(*MapPostsRequest)(nil),           // 42: social.MapPostsRequest
	(*GetPostsByAdminRequest)(nil),    // 43: social.GetPostsByAdminRequest
	(*Model3D)(nil),                   // 44: base_types.Model3d
	(*RichText)(nil),                  // 45: base_types.RichText
	(*Audio)(nil),                     // 46: base_types.Audio
	(*Photo)(nil),                     // 47: base_types.Photo
	(*Video)(nil),                     // 48: base_types.Video
	(*GpsCoordinates)(nil),            // 49: base_types.GpsCoordinates
	(*Matrix4X4)(nil),                 // 50: base_types.Matrix4x4
	(*HealthCheckRequest)(nil),        // 51: base_types.HealthCheckRequest
	(*HeathCheckReply)(nil),           // 52: base_types.HeathCheckReply
}
var file_social_proto_depIdxs = []int32{
	44, // 0: social.ARPoster.model:type_name -> base_types.Model3d
	45, // 1: social.TextPostContent.text_object:type_name -> base_types.RichText
	46, // 2: social.AudioPostContent.audio_object:type_name -> base_types.Audio
	47, // 3: social.PhotoPostContent.photo_object:type_name -> base_types.Photo
	48, // 4: social.VideoPostContent.video_object:type_name -> base_types.Video
	47, // 5: social.VideoPostContent.video_preview:type_name -> base_types.Photo
	8,  // 6: social.PostContent.text:type_name -> social.TextPostContent
	10, // 7: social.PostContent.photo:type_name -> social.PhotoPostContent
	9,  // 8: social.PostContent.audio:type_name -> social.AudioPostContent
	11, // 9: social.PostContent.video:type_name -> social.VideoPostContent
	12, // 10: social.PostContent.sticker:type_name -> social.StickerPostContent
	47, // 11: social.ShortUserProfile.avatar:type_name -> base_types.Photo
	5,  // 12: social.OriginalID.original_id:type_name -> social.PostCompositeID
	5,  // 13: social.OriginalID.parent_id:type_name -> social.PostCompositeID
	5,  // 14: social.Post.id:type_name -> social.PostCompositeID
	14, // 15: social.Post.user:type_name -> social.ShortUserProfile
	49, // 16: social.Post.coordinates:type_name -> base_types.GpsCoordinates
	0,  // 17: social.Post.post_type:type_name -> social.PostTypeEnum
	13, // 18: social.Post.content:type_name -> social.PostContent
	50, // 19: social.Post.post_transform:type_name -> base_types.Matrix4x4
	7,  // 20: social.Post.poster:type_name -> social.Poster
	6,  // 21: social.Post.ar_poster:type_name -> social.ARPoster
	15, // 22: social.Post.original_id:type_name -> social.OriginalID
	0,  // 23: social.CreatePostRequest.post_type:type_name -> social.PostTypeEnum
	13, // 24: social.CreatePostRequest.content:type_name -> social.PostContent
	49, // 25: social.CreatePostRequest.coordinates:type_name -> base_types.GpsCoordinates
	5,  // 26: social.CreatePostRequest.extra_id:type_name -> social.PostCompositeID
	7,  // 27: social.CreatePostRequest.poster:type_name -> social.Poster
	6,  // 28: social.CreatePostRequest.ar_poster:type_name -> social.ARPoster
	50, // 29: social.CreatePostRequest.post_transform:type_name -> base_types.Matrix4x4
	1,  // 30: social.CreatePostRequest.post_visibility:type_name -> social.PostVisibility
	5,  // 31: social.DeletePostRequest.id:type_name -> social.PostCompositeID
	24, // 32: social.DeletePostsRequest.ids:type_name -> social.PostIdList
	16, // 33: social.PostList.post_list:type_name -> social.Post
	5,  // 34: social.CoordinatesPost.id:type_name -> social.PostCompositeID
	49, // 35: social.CoordinatesPost.coordinates:type_name -> base_types.GpsCoordinates
	22, // 36: social.CoordinatesPostList.post_list:type_name -> social.CoordinatesPost
	5,  // 37: social.PostIdList.post_list:type_name -> social.PostCompositeID
	24, // 38: social.GetPostsRequest.ids:type_name -> social.PostIdList
	24, // 39: social.FilterQuestsPostsRequest.ids:type_name -> social.PostIdList
	5,  // 40: social.AddLikeToPostRequest.cpost_id:type_name -> social.PostCompositeID
	5,  // 41: social.DeleteLikeFromPostRequest.cpost_id:type_name -> social.PostCompositeID
	5,  // 42: social.GetLikersFromPostRequest.cpost_id:type_name -> social.PostCompositeID
	5,  // 43: social.PostViewRequest.cpost_id:type_name -> social.PostCompositeID
	5,  // 44: social.PostIdRequest.cpost_id:type_name -> social.PostCompositeID
	49, // 45: social.RRequest.coordinates:type_name -> base_types.GpsCoordinates
	5,  // 46: social.ReportPostRequest.cpost_id:type_name -> social.PostCompositeID
	2,  // 47: social.ReportPostRequest.r_type:type_name -> social.ReportPostTypeEnum
	5,  // 48: social.ModeratePostRequest.cpost_id:type_name -> social.PostCompositeID
	2,  // 49: social.ModeratePostRequest.p_type:type_name -> social.ReportPostTypeEnum
	5,  // 50: social.MapPost.cpost_id:type_name -> social.PostCompositeID
	4,  // 51: social.MapPost.post_type:type_name -> social.MapPostTypeEnum
	49, // 52: social.MapPost.coordinates:type_name -> base_types.GpsCoordinates
	40, // 53: social.MapResponse.map_posts:type_name -> social.MapPost
	49, // 54: social.MapPostsRequest.coordinates:type_name -> base_types.GpsCoordinates
	29, // 55: social.GetPostsByAdminRequest.ids:type_name -> social.SUserIDs
	17, // 56: social.ARMSocialService.CreatePost:input_type -> social.CreatePostRequest
	18, // 57: social.ARMSocialService.DeletePost:input_type -> social.DeletePostRequest
	18, // 58: social.ARMSocialService.DeleteTestPost:input_type -> social.DeletePostRequest
	20, // 59: social.ARMSocialService.GetWallPostIds:input_type -> social.GetWallPostIdsRequest
	26, // 60: social.ARMSocialService.GetFeedPostIds:input_type -> social.SBaseRequest
	38, // 61: social.ARMSocialService.ReportPost:input_type -> social.ReportPostRequest
	39, // 62: social.ARMSocialService.ModeratePost:input_type -> social.ModeratePostRequest
	26, // 63: social.ARMSocialService.GetPrivateFeedPostIds:input_type -> social.SBaseRequest
	26, // 64: social.ARMSocialService.GetGeneralFeedPostIds:input_type -> social.SBaseRequest
	26, // 65: social.ARMSocialService.GetMyPostIds:input_type -> social.SBaseRequest
	37, // 66: social.ARMSocialService.GetPrivatePostIdsInGeoRadius:input_type -> social.RRequest
	37, // 67: social.ARMSocialService.GetGeneralPostIdsInGeoRadius:input_type -> social.RRequest
	37, // 68: social.ARMSocialService.GetMyPostIdsInGeoRadius:input_type -> social.RRequest
	30, // 69: social.ARMSocialService.GetPosts:input_type -> social.GetPostsRequest
	30, // 70: social.ARMSocialService.GetCoordinatesPosts:input_type -> social.GetPostsRequest
	27, // 71: social.ARMSocialService.Subscribe:input_type -> social.WallID
	27, // 72: social.ARMSocialService.UnSubscribe:input_type -> social.WallID
	27, // 73: social.ARMSocialService.GetFollowersIds:input_type -> social.WallID
	28, // 74: social.ARMSocialService.GetFollowingIds:input_type -> social.FollowerID
	32, // 75: social.ARMSocialService.AddLikeToPost:input_type -> social.AddLikeToPostRequest
	33, // 76: social.ARMSocialService.DeleteLikeFromPost:input_type -> social.DeleteLikeFromPostRequest
	34, // 77: social.ARMSocialService.GetLikersFromPost:input_type -> social.GetLikersFromPostRequest
	35, // 78: social.ARMSocialService.PostView:input_type -> social.PostViewRequest
	51, // 79: social.ARMSocialService.HeathCheck:input_type -> base_types.HealthCheckRequest
	31, // 80: social.ARMSocialService.FilterQuestPosts:input_type -> social.FilterQuestsPostsRequest
	42, // 81: social.ARMSocialService.GetMapPosts:input_type -> social.MapPostsRequest
	43, // 82: social.ARMSocialAdminService.GetPostsByAdmin:input_type -> social.GetPostsByAdminRequest
	18, // 83: social.ARMSocialAdminService.DeletePostByAdmin:input_type -> social.DeletePostRequest
	19, // 84: social.ARMSocialAdminService.DeletePostsByAdmin:input_type -> social.DeletePostsRequest
	16, // 85: social.ARMSocialService.CreatePost:output_type -> social.Post
	25, // 86: social.ARMSocialService.DeletePost:output_type -> social.SBaseReply
	25, // 87: social.ARMSocialService.DeleteTestPost:output_type -> social.SBaseReply
	24, // 88: social.ARMSocialService.GetWallPostIds:output_type -> social.PostIdList
	24, // 89: social.ARMSocialService.GetFeedPostIds:output_type -> social.PostIdList
	25, // 90: social.ARMSocialService.ReportPost:output_type -> social.SBaseReply
	25, // 91: social.ARMSocialService.ModeratePost:output_type -> social.SBaseReply
	24, // 92: social.ARMSocialService.GetPrivateFeedPostIds:output_type -> social.PostIdList
	24, // 93: social.ARMSocialService.GetGeneralFeedPostIds:output_type -> social.PostIdList
	24, // 94: social.ARMSocialService.GetMyPostIds:output_type -> social.PostIdList
	24, // 95: social.ARMSocialService.GetPrivatePostIdsInGeoRadius:output_type -> social.PostIdList
	24, // 96: social.ARMSocialService.GetGeneralPostIdsInGeoRadius:output_type -> social.PostIdList
	24, // 97: social.ARMSocialService.GetMyPostIdsInGeoRadius:output_type -> social.PostIdList
	21, // 98: social.ARMSocialService.GetPosts:output_type -> social.PostList
	23, // 99: social.ARMSocialService.GetCoordinatesPosts:output_type -> social.CoordinatesPostList
	25, // 100: social.ARMSocialService.Subscribe:output_type -> social.SBaseReply
	25, // 101: social.ARMSocialService.UnSubscribe:output_type -> social.SBaseReply
	29, // 102: social.ARMSocialService.GetFollowersIds:output_type -> social.SUserIDs
	29, // 103: social.ARMSocialService.GetFollowingIds:output_type -> social.SUserIDs
	25, // 104: social.ARMSocialService.AddLikeToPost:output_type -> social.SBaseReply
	25, // 105: social.ARMSocialService.DeleteLikeFromPost:output_type -> social.SBaseReply
	29, // 106: social.ARMSocialService.GetLikersFromPost:output_type -> social.SUserIDs
	25, // 107: social.ARMSocialService.PostView:output_type -> social.SBaseReply
	52, // 108: social.ARMSocialService.HeathCheck:output_type -> base_types.HeathCheckReply
	24, // 109: social.ARMSocialService.FilterQuestPosts:output_type -> social.PostIdList
	41, // 110: social.ARMSocialService.GetMapPosts:output_type -> social.MapResponse
	21, // 111: social.ARMSocialAdminService.GetPostsByAdmin:output_type -> social.PostList
	25, // 112: social.ARMSocialAdminService.DeletePostByAdmin:output_type -> social.SBaseReply
	25, // 113: social.ARMSocialAdminService.DeletePostsByAdmin:output_type -> social.SBaseReply
	85, // [85:114] is the sub-list for method output_type
	56, // [56:85] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() { file_social_proto_init() }
func file_social_proto_init() {
	if File_social_proto != nil {
		return
	}
	file_base_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_social_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCompositeID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ARPoster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Poster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextPostContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioPostContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoPostContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPostContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StickerPostContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortUserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OriginalID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWallPostIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordinatesPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordinatesPostList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostIdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WallID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowerID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SUserIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterQuestsPostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLikeToPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLikeFromPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikersFromPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModeratePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapPostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPostsByAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_social_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*PostContent_Text)(nil),
		(*PostContent_Photo)(nil),
		(*PostContent_Audio)(nil),
		(*PostContent_Video)(nil),
		(*PostContent_Sticker)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_social_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_social_proto_goTypes,
		DependencyIndexes: file_social_proto_depIdxs,
		EnumInfos:         file_social_proto_enumTypes,
		MessageInfos:      file_social_proto_msgTypes,
	}.Build()
	File_social_proto = out.File
	file_social_proto_rawDesc = nil
	file_social_proto_goTypes = nil
	file_social_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ARMSocialServiceClient is the client API for ARMSocialService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ARMSocialServiceClient interface {
	CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*Post, error)
	DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*SBaseReply, error)
	DeleteTestPost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*SBaseReply, error)
	GetWallPostIds(ctx context.Context, in *GetWallPostIdsRequest, opts ...grpc.CallOption) (*PostIdList, error)
	GetFeedPostIds(ctx context.Context, in *SBaseRequest, opts ...grpc.CallOption) (*PostIdList, error)
	ReportPost(ctx context.Context, in *ReportPostRequest, opts ...grpc.CallOption) (*SBaseReply, error)
	ModeratePost(ctx context.Context, in *ModeratePostRequest, opts ...grpc.CallOption) (*SBaseReply, error)
	GetPrivateFeedPostIds(ctx context.Context, in *SBaseRequest, opts ...grpc.CallOption) (*PostIdList, error)
	GetGeneralFeedPostIds(ctx context.Context, in *SBaseRequest, opts ...grpc.CallOption) (*PostIdList, error)
	GetMyPostIds(ctx context.Context, in *SBaseRequest, opts ...grpc.CallOption) (*PostIdList, error)
	// geo queries
	GetPrivatePostIdsInGeoRadius(ctx context.Context, in *RRequest, opts ...grpc.CallOption) (*PostIdList, error)
	GetGeneralPostIdsInGeoRadius(ctx context.Context, in *RRequest, opts ...grpc.CallOption) (*PostIdList, error)
	GetMyPostIdsInGeoRadius(ctx context.Context, in *RRequest, opts ...grpc.CallOption) (*PostIdList, error)
	GetPosts(ctx context.Context, in *GetPostsRequest, opts ...grpc.CallOption) (*PostList, error)
	GetCoordinatesPosts(ctx context.Context, in *GetPostsRequest, opts ...grpc.CallOption) (*CoordinatesPostList, error)
	Subscribe(ctx context.Context, in *WallID, opts ...grpc.CallOption) (*SBaseReply, error)
	UnSubscribe(ctx context.Context, in *WallID, opts ...grpc.CallOption) (*SBaseReply, error)
	GetFollowersIds(ctx context.Context, in *WallID, opts ...grpc.CallOption) (*SUserIDs, error)
	GetFollowingIds(ctx context.Context, in *FollowerID, opts ...grpc.CallOption) (*SUserIDs, error)
	AddLikeToPost(ctx context.Context, in *AddLikeToPostRequest, opts ...grpc.CallOption) (*SBaseReply, error)
	DeleteLikeFromPost(ctx context.Context, in *DeleteLikeFromPostRequest, opts ...grpc.CallOption) (*SBaseReply, error)
	GetLikersFromPost(ctx context.Context, in *GetLikersFromPostRequest, opts ...grpc.CallOption) (*SUserIDs, error)
	PostView(ctx context.Context, in *PostViewRequest, opts ...grpc.CallOption) (*SBaseReply, error)
	HeathCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HeathCheckReply, error)
	// rpc MarkPostAsQuest (PostIdRequest) returns (SBaseReply);
	FilterQuestPosts(ctx context.Context, in *FilterQuestsPostsRequest, opts ...grpc.CallOption) (*PostIdList, error)
	GetMapPosts(ctx context.Context, in *MapPostsRequest, opts ...grpc.CallOption) (*MapResponse, error)
}

type aRMSocialServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewARMSocialServiceClient(cc grpc.ClientConnInterface) ARMSocialServiceClient {
	return &aRMSocialServiceClient{cc}
}

func (c *aRMSocialServiceClient) CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*Post, error) {
	out := new(Post)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/CreatePost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/DeletePost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) DeleteTestPost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/DeleteTestPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetWallPostIds(ctx context.Context, in *GetWallPostIdsRequest, opts ...grpc.CallOption) (*PostIdList, error) {
	out := new(PostIdList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetWallPostIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetFeedPostIds(ctx context.Context, in *SBaseRequest, opts ...grpc.CallOption) (*PostIdList, error) {
	out := new(PostIdList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetFeedPostIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) ReportPost(ctx context.Context, in *ReportPostRequest, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/ReportPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) ModeratePost(ctx context.Context, in *ModeratePostRequest, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/ModeratePost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetPrivateFeedPostIds(ctx context.Context, in *SBaseRequest, opts ...grpc.CallOption) (*PostIdList, error) {
	out := new(PostIdList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetPrivateFeedPostIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetGeneralFeedPostIds(ctx context.Context, in *SBaseRequest, opts ...grpc.CallOption) (*PostIdList, error) {
	out := new(PostIdList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetGeneralFeedPostIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetMyPostIds(ctx context.Context, in *SBaseRequest, opts ...grpc.CallOption) (*PostIdList, error) {
	out := new(PostIdList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetMyPostIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetPrivatePostIdsInGeoRadius(ctx context.Context, in *RRequest, opts ...grpc.CallOption) (*PostIdList, error) {
	out := new(PostIdList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetPrivatePostIdsInGeoRadius", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetGeneralPostIdsInGeoRadius(ctx context.Context, in *RRequest, opts ...grpc.CallOption) (*PostIdList, error) {
	out := new(PostIdList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetGeneralPostIdsInGeoRadius", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetMyPostIdsInGeoRadius(ctx context.Context, in *RRequest, opts ...grpc.CallOption) (*PostIdList, error) {
	out := new(PostIdList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetMyPostIdsInGeoRadius", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetPosts(ctx context.Context, in *GetPostsRequest, opts ...grpc.CallOption) (*PostList, error) {
	out := new(PostList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetPosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetCoordinatesPosts(ctx context.Context, in *GetPostsRequest, opts ...grpc.CallOption) (*CoordinatesPostList, error) {
	out := new(CoordinatesPostList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetCoordinatesPosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) Subscribe(ctx context.Context, in *WallID, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) UnSubscribe(ctx context.Context, in *WallID, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/UnSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetFollowersIds(ctx context.Context, in *WallID, opts ...grpc.CallOption) (*SUserIDs, error) {
	out := new(SUserIDs)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetFollowersIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetFollowingIds(ctx context.Context, in *FollowerID, opts ...grpc.CallOption) (*SUserIDs, error) {
	out := new(SUserIDs)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetFollowingIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) AddLikeToPost(ctx context.Context, in *AddLikeToPostRequest, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/AddLikeToPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) DeleteLikeFromPost(ctx context.Context, in *DeleteLikeFromPostRequest, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/DeleteLikeFromPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetLikersFromPost(ctx context.Context, in *GetLikersFromPostRequest, opts ...grpc.CallOption) (*SUserIDs, error) {
	out := new(SUserIDs)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetLikersFromPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) PostView(ctx context.Context, in *PostViewRequest, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/PostView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) HeathCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HeathCheckReply, error) {
	out := new(HeathCheckReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/HeathCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) FilterQuestPosts(ctx context.Context, in *FilterQuestsPostsRequest, opts ...grpc.CallOption) (*PostIdList, error) {
	out := new(PostIdList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/FilterQuestPosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialServiceClient) GetMapPosts(ctx context.Context, in *MapPostsRequest, opts ...grpc.CallOption) (*MapResponse, error) {
	out := new(MapResponse)
	err := c.cc.Invoke(ctx, "/social.ARMSocialService/GetMapPosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ARMSocialServiceServer is the server API for ARMSocialService service.
type ARMSocialServiceServer interface {
	CreatePost(context.Context, *CreatePostRequest) (*Post, error)
	DeletePost(context.Context, *DeletePostRequest) (*SBaseReply, error)
	DeleteTestPost(context.Context, *DeletePostRequest) (*SBaseReply, error)
	GetWallPostIds(context.Context, *GetWallPostIdsRequest) (*PostIdList, error)
	GetFeedPostIds(context.Context, *SBaseRequest) (*PostIdList, error)
	ReportPost(context.Context, *ReportPostRequest) (*SBaseReply, error)
	ModeratePost(context.Context, *ModeratePostRequest) (*SBaseReply, error)
	GetPrivateFeedPostIds(context.Context, *SBaseRequest) (*PostIdList, error)
	GetGeneralFeedPostIds(context.Context, *SBaseRequest) (*PostIdList, error)
	GetMyPostIds(context.Context, *SBaseRequest) (*PostIdList, error)
	// geo queries
	GetPrivatePostIdsInGeoRadius(context.Context, *RRequest) (*PostIdList, error)
	GetGeneralPostIdsInGeoRadius(context.Context, *RRequest) (*PostIdList, error)
	GetMyPostIdsInGeoRadius(context.Context, *RRequest) (*PostIdList, error)
	GetPosts(context.Context, *GetPostsRequest) (*PostList, error)
	GetCoordinatesPosts(context.Context, *GetPostsRequest) (*CoordinatesPostList, error)
	Subscribe(context.Context, *WallID) (*SBaseReply, error)
	UnSubscribe(context.Context, *WallID) (*SBaseReply, error)
	GetFollowersIds(context.Context, *WallID) (*SUserIDs, error)
	GetFollowingIds(context.Context, *FollowerID) (*SUserIDs, error)
	AddLikeToPost(context.Context, *AddLikeToPostRequest) (*SBaseReply, error)
	DeleteLikeFromPost(context.Context, *DeleteLikeFromPostRequest) (*SBaseReply, error)
	GetLikersFromPost(context.Context, *GetLikersFromPostRequest) (*SUserIDs, error)
	PostView(context.Context, *PostViewRequest) (*SBaseReply, error)
	HeathCheck(context.Context, *HealthCheckRequest) (*HeathCheckReply, error)
	// rpc MarkPostAsQuest (PostIdRequest) returns (SBaseReply);
	FilterQuestPosts(context.Context, *FilterQuestsPostsRequest) (*PostIdList, error)
	GetMapPosts(context.Context, *MapPostsRequest) (*MapResponse, error)
}

// UnimplementedARMSocialServiceServer can be embedded to have forward compatible implementations.
type UnimplementedARMSocialServiceServer struct {
}

func (*UnimplementedARMSocialServiceServer) CreatePost(context.Context, *CreatePostRequest) (*Post, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePost not implemented")
}
func (*UnimplementedARMSocialServiceServer) DeletePost(context.Context, *DeletePostRequest) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePost not implemented")
}
func (*UnimplementedARMSocialServiceServer) DeleteTestPost(context.Context, *DeletePostRequest) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTestPost not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetWallPostIds(context.Context, *GetWallPostIdsRequest) (*PostIdList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWallPostIds not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetFeedPostIds(context.Context, *SBaseRequest) (*PostIdList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeedPostIds not implemented")
}
func (*UnimplementedARMSocialServiceServer) ReportPost(context.Context, *ReportPostRequest) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportPost not implemented")
}
func (*UnimplementedARMSocialServiceServer) ModeratePost(context.Context, *ModeratePostRequest) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModeratePost not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetPrivateFeedPostIds(context.Context, *SBaseRequest) (*PostIdList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrivateFeedPostIds not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetGeneralFeedPostIds(context.Context, *SBaseRequest) (*PostIdList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGeneralFeedPostIds not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetMyPostIds(context.Context, *SBaseRequest) (*PostIdList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyPostIds not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetPrivatePostIdsInGeoRadius(context.Context, *RRequest) (*PostIdList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrivatePostIdsInGeoRadius not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetGeneralPostIdsInGeoRadius(context.Context, *RRequest) (*PostIdList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGeneralPostIdsInGeoRadius not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetMyPostIdsInGeoRadius(context.Context, *RRequest) (*PostIdList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyPostIdsInGeoRadius not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetPosts(context.Context, *GetPostsRequest) (*PostList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPosts not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetCoordinatesPosts(context.Context, *GetPostsRequest) (*CoordinatesPostList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCoordinatesPosts not implemented")
}
func (*UnimplementedARMSocialServiceServer) Subscribe(context.Context, *WallID) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedARMSocialServiceServer) UnSubscribe(context.Context, *WallID) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnSubscribe not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetFollowersIds(context.Context, *WallID) (*SUserIDs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowersIds not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetFollowingIds(context.Context, *FollowerID) (*SUserIDs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowingIds not implemented")
}
func (*UnimplementedARMSocialServiceServer) AddLikeToPost(context.Context, *AddLikeToPostRequest) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddLikeToPost not implemented")
}
func (*UnimplementedARMSocialServiceServer) DeleteLikeFromPost(context.Context, *DeleteLikeFromPostRequest) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLikeFromPost not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetLikersFromPost(context.Context, *GetLikersFromPostRequest) (*SUserIDs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLikersFromPost not implemented")
}
func (*UnimplementedARMSocialServiceServer) PostView(context.Context, *PostViewRequest) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostView not implemented")
}
func (*UnimplementedARMSocialServiceServer) HeathCheck(context.Context, *HealthCheckRequest) (*HeathCheckReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HeathCheck not implemented")
}
func (*UnimplementedARMSocialServiceServer) FilterQuestPosts(context.Context, *FilterQuestsPostsRequest) (*PostIdList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilterQuestPosts not implemented")
}
func (*UnimplementedARMSocialServiceServer) GetMapPosts(context.Context, *MapPostsRequest) (*MapResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMapPosts not implemented")
}

func RegisterARMSocialServiceServer(s *grpc.Server, srv ARMSocialServiceServer) {
	s.RegisterService(&_ARMSocialService_serviceDesc, srv)
}

func _ARMSocialService_CreatePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).CreatePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/CreatePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).CreatePost(ctx, req.(*CreatePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_DeletePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).DeletePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/DeletePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).DeletePost(ctx, req.(*DeletePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_DeleteTestPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).DeleteTestPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/DeleteTestPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).DeleteTestPost(ctx, req.(*DeletePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetWallPostIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWallPostIdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetWallPostIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetWallPostIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetWallPostIds(ctx, req.(*GetWallPostIdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetFeedPostIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SBaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetFeedPostIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetFeedPostIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetFeedPostIds(ctx, req.(*SBaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_ReportPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).ReportPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/ReportPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).ReportPost(ctx, req.(*ReportPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_ModeratePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModeratePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).ModeratePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/ModeratePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).ModeratePost(ctx, req.(*ModeratePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetPrivateFeedPostIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SBaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetPrivateFeedPostIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetPrivateFeedPostIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetPrivateFeedPostIds(ctx, req.(*SBaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetGeneralFeedPostIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SBaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetGeneralFeedPostIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetGeneralFeedPostIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetGeneralFeedPostIds(ctx, req.(*SBaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetMyPostIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SBaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetMyPostIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetMyPostIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetMyPostIds(ctx, req.(*SBaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetPrivatePostIdsInGeoRadius_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetPrivatePostIdsInGeoRadius(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetPrivatePostIdsInGeoRadius",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetPrivatePostIdsInGeoRadius(ctx, req.(*RRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetGeneralPostIdsInGeoRadius_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetGeneralPostIdsInGeoRadius(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetGeneralPostIdsInGeoRadius",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetGeneralPostIdsInGeoRadius(ctx, req.(*RRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetMyPostIdsInGeoRadius_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetMyPostIdsInGeoRadius(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetMyPostIdsInGeoRadius",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetMyPostIdsInGeoRadius(ctx, req.(*RRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetPosts(ctx, req.(*GetPostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetCoordinatesPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetCoordinatesPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetCoordinatesPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetCoordinatesPosts(ctx, req.(*GetPostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WallID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).Subscribe(ctx, req.(*WallID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_UnSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WallID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).UnSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/UnSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).UnSubscribe(ctx, req.(*WallID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetFollowersIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WallID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetFollowersIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetFollowersIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetFollowersIds(ctx, req.(*WallID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetFollowingIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowerID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetFollowingIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetFollowingIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetFollowingIds(ctx, req.(*FollowerID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_AddLikeToPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddLikeToPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).AddLikeToPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/AddLikeToPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).AddLikeToPost(ctx, req.(*AddLikeToPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_DeleteLikeFromPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLikeFromPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).DeleteLikeFromPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/DeleteLikeFromPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).DeleteLikeFromPost(ctx, req.(*DeleteLikeFromPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetLikersFromPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLikersFromPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetLikersFromPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetLikersFromPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetLikersFromPost(ctx, req.(*GetLikersFromPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_PostView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostViewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).PostView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/PostView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).PostView(ctx, req.(*PostViewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_HeathCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).HeathCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/HeathCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).HeathCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_FilterQuestPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilterQuestsPostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).FilterQuestPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/FilterQuestPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).FilterQuestPosts(ctx, req.(*FilterQuestsPostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialService_GetMapPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MapPostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialServiceServer).GetMapPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialService/GetMapPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialServiceServer).GetMapPosts(ctx, req.(*MapPostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ARMSocialService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "social.ARMSocialService",
	HandlerType: (*ARMSocialServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePost",
			Handler:    _ARMSocialService_CreatePost_Handler,
		},
		{
			MethodName: "DeletePost",
			Handler:    _ARMSocialService_DeletePost_Handler,
		},
		{
			MethodName: "DeleteTestPost",
			Handler:    _ARMSocialService_DeleteTestPost_Handler,
		},
		{
			MethodName: "GetWallPostIds",
			Handler:    _ARMSocialService_GetWallPostIds_Handler,
		},
		{
			MethodName: "GetFeedPostIds",
			Handler:    _ARMSocialService_GetFeedPostIds_Handler,
		},
		{
			MethodName: "ReportPost",
			Handler:    _ARMSocialService_ReportPost_Handler,
		},
		{
			MethodName: "ModeratePost",
			Handler:    _ARMSocialService_ModeratePost_Handler,
		},
		{
			MethodName: "GetPrivateFeedPostIds",
			Handler:    _ARMSocialService_GetPrivateFeedPostIds_Handler,
		},
		{
			MethodName: "GetGeneralFeedPostIds",
			Handler:    _ARMSocialService_GetGeneralFeedPostIds_Handler,
		},
		{
			MethodName: "GetMyPostIds",
			Handler:    _ARMSocialService_GetMyPostIds_Handler,
		},
		{
			MethodName: "GetPrivatePostIdsInGeoRadius",
			Handler:    _ARMSocialService_GetPrivatePostIdsInGeoRadius_Handler,
		},
		{
			MethodName: "GetGeneralPostIdsInGeoRadius",
			Handler:    _ARMSocialService_GetGeneralPostIdsInGeoRadius_Handler,
		},
		{
			MethodName: "GetMyPostIdsInGeoRadius",
			Handler:    _ARMSocialService_GetMyPostIdsInGeoRadius_Handler,
		},
		{
			MethodName: "GetPosts",
			Handler:    _ARMSocialService_GetPosts_Handler,
		},
		{
			MethodName: "GetCoordinatesPosts",
			Handler:    _ARMSocialService_GetCoordinatesPosts_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _ARMSocialService_Subscribe_Handler,
		},
		{
			MethodName: "UnSubscribe",
			Handler:    _ARMSocialService_UnSubscribe_Handler,
		},
		{
			MethodName: "GetFollowersIds",
			Handler:    _ARMSocialService_GetFollowersIds_Handler,
		},
		{
			MethodName: "GetFollowingIds",
			Handler:    _ARMSocialService_GetFollowingIds_Handler,
		},
		{
			MethodName: "AddLikeToPost",
			Handler:    _ARMSocialService_AddLikeToPost_Handler,
		},
		{
			MethodName: "DeleteLikeFromPost",
			Handler:    _ARMSocialService_DeleteLikeFromPost_Handler,
		},
		{
			MethodName: "GetLikersFromPost",
			Handler:    _ARMSocialService_GetLikersFromPost_Handler,
		},
		{
			MethodName: "PostView",
			Handler:    _ARMSocialService_PostView_Handler,
		},
		{
			MethodName: "HeathCheck",
			Handler:    _ARMSocialService_HeathCheck_Handler,
		},
		{
			MethodName: "FilterQuestPosts",
			Handler:    _ARMSocialService_FilterQuestPosts_Handler,
		},
		{
			MethodName: "GetMapPosts",
			Handler:    _ARMSocialService_GetMapPosts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "social.proto",
}

// ARMSocialAdminServiceClient is the client API for ARMSocialAdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ARMSocialAdminServiceClient interface {
	GetPostsByAdmin(ctx context.Context, in *GetPostsByAdminRequest, opts ...grpc.CallOption) (*PostList, error)
	DeletePostByAdmin(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*SBaseReply, error)
	DeletePostsByAdmin(ctx context.Context, in *DeletePostsRequest, opts ...grpc.CallOption) (*SBaseReply, error)
}

type aRMSocialAdminServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewARMSocialAdminServiceClient(cc grpc.ClientConnInterface) ARMSocialAdminServiceClient {
	return &aRMSocialAdminServiceClient{cc}
}

func (c *aRMSocialAdminServiceClient) GetPostsByAdmin(ctx context.Context, in *GetPostsByAdminRequest, opts ...grpc.CallOption) (*PostList, error) {
	out := new(PostList)
	err := c.cc.Invoke(ctx, "/social.ARMSocialAdminService/GetPostsByAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialAdminServiceClient) DeletePostByAdmin(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialAdminService/DeletePostByAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aRMSocialAdminServiceClient) DeletePostsByAdmin(ctx context.Context, in *DeletePostsRequest, opts ...grpc.CallOption) (*SBaseReply, error) {
	out := new(SBaseReply)
	err := c.cc.Invoke(ctx, "/social.ARMSocialAdminService/DeletePostsByAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ARMSocialAdminServiceServer is the server API for ARMSocialAdminService service.
type ARMSocialAdminServiceServer interface {
	GetPostsByAdmin(context.Context, *GetPostsByAdminRequest) (*PostList, error)
	DeletePostByAdmin(context.Context, *DeletePostRequest) (*SBaseReply, error)
	DeletePostsByAdmin(context.Context, *DeletePostsRequest) (*SBaseReply, error)
}

// UnimplementedARMSocialAdminServiceServer can be embedded to have forward compatible implementations.
type UnimplementedARMSocialAdminServiceServer struct {
}

func (*UnimplementedARMSocialAdminServiceServer) GetPostsByAdmin(context.Context, *GetPostsByAdminRequest) (*PostList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPostsByAdmin not implemented")
}
func (*UnimplementedARMSocialAdminServiceServer) DeletePostByAdmin(context.Context, *DeletePostRequest) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePostByAdmin not implemented")
}
func (*UnimplementedARMSocialAdminServiceServer) DeletePostsByAdmin(context.Context, *DeletePostsRequest) (*SBaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePostsByAdmin not implemented")
}

func RegisterARMSocialAdminServiceServer(s *grpc.Server, srv ARMSocialAdminServiceServer) {
	s.RegisterService(&_ARMSocialAdminService_serviceDesc, srv)
}

func _ARMSocialAdminService_GetPostsByAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPostsByAdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialAdminServiceServer).GetPostsByAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialAdminService/GetPostsByAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialAdminServiceServer).GetPostsByAdmin(ctx, req.(*GetPostsByAdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialAdminService_DeletePostByAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialAdminServiceServer).DeletePostByAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialAdminService/DeletePostByAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialAdminServiceServer).DeletePostByAdmin(ctx, req.(*DeletePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ARMSocialAdminService_DeletePostsByAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ARMSocialAdminServiceServer).DeletePostsByAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/social.ARMSocialAdminService/DeletePostsByAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ARMSocialAdminServiceServer).DeletePostsByAdmin(ctx, req.(*DeletePostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ARMSocialAdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "social.ARMSocialAdminService",
	HandlerType: (*ARMSocialAdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPostsByAdmin",
			Handler:    _ARMSocialAdminService_GetPostsByAdmin_Handler,
		},
		{
			MethodName: "DeletePostByAdmin",
			Handler:    _ARMSocialAdminService_DeletePostByAdmin_Handler,
		},
		{
			MethodName: "DeletePostsByAdmin",
			Handler:    _ARMSocialAdminService_DeletePostsByAdmin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "social.proto",
}
